<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentMigrator.Runner</name>
    </assembly>
    <members>
        <member name="M:FluentMigrator.Runner.Extensions.SqlServerExtensions.WithIdentityInsert(FluentMigrator.Builders.Insert.IInsertDataSyntax)">
            <summary>
            Inserts data using Sql Server's IDENTITY INSERT feature.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Runner.Extensions.SqlServerExtensions.Identity``2(FluentMigrator.Builders.IColumnOptionSyntax{``0,``1},System.Int32,System.Int32)">
            <summary>
            Makes a column an Identity column using the specified seed and increment values.
            </summary>
            <param name="expression">Column on which to apply the identity.</param>
            <param name="seed">Starting value of the identity.</param>
            <param name="increment">Increment value of the identity.</param>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Base.ColumnBase.GetPrimaryKeyConstraintName(System.Collections.Generic.IEnumerable{FluentMigrator.Model.ColumnDefinition},System.String)">
            <summary>
            Gets the name of the primary key constraint. Some Generators may need to override if the constraint name is limited
            </summary>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericGenerator.Generate(FluentMigrator.Expressions.CreateTableExpression)">
            <summary>
            Outputs a create table string
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.IsQuoted(System.String)">
            <summary>
            Returns true is the value starts and ends with a close quote
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.Quote(System.String)">
            <summary>
            Returns a quoted string that has been correctly escaped
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteColumnName(System.String)">
            <summary>
            Quotes a column name
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteConstraintName(System.String)">
            <summary>
            Quotes a constraint name
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteIndexName(System.String)">
            <summary>
            Quote an index name
            </summary>
            <param name="indexName"></param>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteTableName(System.String)">
            <summary>
            Quotes a Table name
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteSchemaName(System.String)">
            <summary>
            Quotes a Schema Name
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.QuoteSequenceName(System.String)">
            <summary>
            Quotes a Sequence name
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.Generic.GenericQuoter.UnQuote(System.String)">
            <summary>
            Provides and unquoted, unescaped string
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Generators.Generic.GenericQuoter.OpenQuote">
            <summary>
            Returns the opening quote identifier - " is the standard according to the specification
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Generators.Generic.GenericQuoter.CloseQuote">
            <summary>
            Returns the closing quote identifier - " is the standard according to the specification
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.Generators.DatabaseOperationNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DatabaseOperationNotSupportedException"/> class.
            </summary>
        </member>
        <member name="T:FluentMigrator.Runner.Initialization.INetConfigManager">
            <summary>
            Understand .NET config mechanism and provides access to Configuration sections
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Initialization.IRunnerContext.ApplicationContext">
            <summary>The arbitrary application context passed to the task runner.</summary>
        </member>
        <member name="T:FluentMigrator.Runner.Initialization.ConnectionStringManager">
            <summary>
            Locates connection strings by name in assembly's config file or machine.config
            If no connection matches it uses the specified connection string as valid connection
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Initialization.RunnerContext.ApplicationContext">
            <summary>The arbitrary application context passed to the task runner.</summary>
        </member>
        <member name="F:FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.AutoCommitOnCheckFail">
            <summary>
            Automatically starts a new transaction when a virtual lock check fails
            </summary>
        </member>
        <member name="F:FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.AutoCommit">
            <summary>
            Automaticaly commits every processed statement
            </summary>
        </member>
        <member name="F:FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.None">
            <summary>
            Don't manage transactions
            </summary>
        </member>
        <member name="F:FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.MaxNameLength">
            <summary>
            Maximum internal length of names in firebird is 31 characters
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.TruncateLongNames">
            <summary>
            Firebird only supports constraint, table, column, etc. names up to 31 characters
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.VirtualLock">
            <summary>
            Virtually lock tables and columns touched by DDL statements in a transaction
            </summary>
        </member>
        <member name="P:FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.TransactionModel">
            <summary>
            Which transaction model to use if any to work around firebird's DDL restrictions
            </summary>
        </member>
        <member name="M:FluentMigrator.Runner.MigrationRunner.ExecuteExpressions(System.Collections.Generic.ICollection{FluentMigrator.Expressions.IMigrationExpression})">
            <summary>
            execute each migration expression in the expression collection
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="P:FluentMigrator.Runner.MigrationRunner.ApplicationContext">
            <summary>The arbitrary application context passed to the task runner.</summary>
        </member>
    </members>
</doc>
